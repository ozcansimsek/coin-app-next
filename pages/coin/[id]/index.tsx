import { Chip, Grid, Typography } from "@mui/material";
import Chart from "components/charts/Chart";
import type { GetServerSideProps, GetServerSidePropsContext } from "next";
import Head from "next/head";
import Link from "next/link";
import { Link as MuiLink } from "@mui/material";
import { Coin } from "types/coin";

const Coin = (coin: Coin) => {
  return (
    <>
      <Head>
        <title>{coin.name} Cryptocurrency Chart and Data</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container spacing={2}>
        <Grid
          item
          xs={12}
          display="flex"
          alignItems="center"
          justifyContent="center"
        >
          <Chip label={`#${coin.market_cap_rank || "?"}`} />
          <Link href={`/coin/${coin.id}/about`} passHref>
            <MuiLink variant="h4" sx={{ pl: 2 }}>
              {coin.name}
            </MuiLink>
          </Link>
        </Grid>
        <Grid item xs={4}>
          <Typography variant="h5" align="center">
            Price: ${coin.market_data.current_price.usd}{" "}
          </Typography>
        </Grid>
        <Grid item xs={4}>
          <Typography variant="h5" align="center">
            Circulating Supply:{" "}
            {new Intl.NumberFormat("en-US").format(
              coin.market_data.circulating_supply
            )}{" "}
            {coin.symbol.toUpperCase()}
          </Typography>
          <Typography variant="h5" align="center">
            Total Supply:{" "}
            {new Intl.NumberFormat("en-US").format(
              coin.market_data.total_supply
            )}{" "}
            {coin.symbol.toUpperCase()}
          </Typography>
        </Grid>
        <Grid item xs={4}>
          <Typography variant="h5" align="center">
            ATH:{" "}
            {new Intl.NumberFormat("en-US", {
              currency: "USD",
              style: "currency",
            }).format(coin.market_data.ath.usd)}{" "}
          </Typography>
          <Typography variant="h5" align="center">
            ATL:{" "}
            {new Intl.NumberFormat("en-US", {
              currency: "USD",
              style: "currency",
            }).format(coin.market_data.atl.usd)}{" "}
          </Typography>
        </Grid>
        <Grid item xs={12}>
          <Chart coin={coin.id} />
        </Grid>
      </Grid>
    </>
  );
};

export default Coin;

export const getServerSideProps: GetServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const res = await fetch(
    `https://api.coingecko.com/api/v3/coins/${context.query.id}`
  );
  const data = await res.json();
  return {
    props: data,
  };
};
